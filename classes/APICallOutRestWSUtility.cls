/*
10/31/2018       Padma Bedampeta    SFDC-14005, add invokePlanMappingService method to capture the response for Plan Mapping request
11/10/2018       Luke Chen          SFDC-14006, update invokePlanMappingService method
29/10/2018       Raviteja           SFDC-14273, To fetch the response for ProductGroups 
15//11/2018      Santosh Kumar      SFDC - 14568 , To fetch the response for AgeRates 
*/

public with sharing class APICallOutRestWSUtility {
    
    private String endpoint;
    private String certificate;
    private String userName;
    private String password;
    private String clientId;
    private String clientSecret;
    private String integrationName;
    private Username_Password__c callOutSetting=new Username_Password__c();
    private static final String GFRA_IntegrationName='Integration GFRA'; //Name of the integration User for Oauth and Callout Name in custom setting 'Passwor_username' for GFRA
    private static final String Heron_IntegrationName='Integration Heron';
    private CustomSettingDAO.ICustomSettingDAO customSettingInstance=new CustomSettingDAO();
    private UserDAO.IUserDAO userDAOInstance=new UserDAO();
    private String callOutName;
    public APIJwtOAuthUtility oAuthUtil;// =new APIJwtOAuthUtility();
    public String newAccessToken;//newAccessToken
    public DateTime lastTokenUpdateDateTime;
    public FW_Service_Status_Log__c integrationStatuLog;
    public String integrationUserName; //@Akbar - added this variable to avoid expire token issue from SGR_GenerateAgeRateTablesBatch
    
    @TestVisible private Final string SGR_INTEGRATION_NAME = 'GSPS_ProductGroupCallOut';
    @TestVisible private static string EXCEPTION_MESSAGE = 'EndPoint not configured';
    @TestVisible private static final String POST_METHOD = 'POST';    
    @TestVisible private static final String GET_METHOD = 'GET';    
    @TestVisible private static final String JSON_CONTENT_TYPE = 'application/json';
    
    public APICallOutRestWSUtility(String calloutName){
        this.callOutName=calloutName;
        this.callOutSetting=customSettingInstance.getUsernamePasswordCSByName(calloutName); 
        this.integrationStatuLog=new FW_Service_Status_Log__c();
        this.newAccessToken=null;
        
        if(this.callOutSetting !=null){   
            this.endpoint=calloutSetting.EndPoinUrl__c;
            this.certificate=calloutSetting.Certificate__c;
            this.password=calloutSetting.Password__c;
            this.userName=calloutSetting.UserName__c;
            this.clientId=calloutSetting.ClientId__c;
            this.clientSecret=calloutSetting.Client_Secret__c;
            this.integrationName=calloutSetting.Integration_Name__c;
            this.integrationUserName=calloutSetting.Integration_Name__c; //@Akbar - added this variable to avoid expire token issue from SGR_GenerateAgeRateTablesBatch
        }
    }
    
    /*************************************************************************************************************************
* Author: MC
* Description: Get the GFRA WS credentail from the custom setting "Password_userName" by the CalloutName 'Integration GFRA'
* which is integration user name as well mapped in OautJwtToken custom setting.
*************************************************************************************************************************/
    
    public DTOStatus SendAdjustmentWSCallOut(DTOGFRA_AdjustmentResponse reqDTO){
        
        DTOStatus status=new DTOStatus();
        try{            
            
        //    User iUser=userDAOInstance.getUserByName(integrationName);//GFRA_IntegrationName);
            
            oAuthUtil=new APIJwtOAuthUtility(this.integrationName);//iUser.id);
            
            String accessToken=oAuthUtil.getAccessToken();//GFRA_IntegrationName);
            
            system.debug('accessToken JWT::: '+accesstoken);
            
            if(accessToken!=null){
                
                String reqBody = JSON.serialize(reqDTO);
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,reqBody,'POST');//setUpDPHttpRequest(accessToken,reqBody);
                system.debug('request: '+req);
                system.debug('request body: '+req.getBody());
                
                Http http = new Http();
                
                HttpResponse res=http.send(req);//InvokeService(req);
                system.debug('resonse:'+res);
                system.debug('response body:'+res.getBody());
                
                String jsonResStr=res.getbody();
                
                DTOGFRA_AdjustmentRequestRTResponse resStatus=(DTOGFRA_AdjustmentRequestRTResponse)System.JSON.deserialize(jsonResStr,DTOGFRA_AdjustmentRequestRTResponse.class);
                
                system.debug('Adjuster Service CallOut Status:::'+resStatus);
                
                if(resStatus!=null){ 
                    
                    status=resStatus.status;
                    system.debug('status:::::::'+status);
                    
                }
                
                if(OAuthUtil.updateTokenSetting){
                    try{
                        oAuthUtil.updateToken(accessToken);
                        system.debug('update token custom setting...');
                    }catch(Exception e){
                        system.debug(' update token exception, moving forward');
                        
                        return Status;
                    }
                }
                
            }else{
                status.statusCode='Failed';
                status.statusMessage='Your request can not be completed, please contact System Administrator.';
                status.errorMessage='Retrieve JWT OAuthToken Error!';
                system.debug('Error!!!! jwt OauthToken is null');
            }
            
            
        }catch (Exception e){
            system.debug('GFRA AdjustmentWS CallOut exception: '+e);
            status.statusCode='Failed';
            status.statusMessage='Your request can not be completed, please contact System Administrator.';
            status.errorMessage=e.getMessage();
            
        }
        return status;
    }
    
    /*************************************************************************************************************************
* Author: MC
* Description: Get the HERON WS credentail from the custom setting "Password_userName" by the CalloutName 'Integration Heron'
* which is integration user name as well mapped in OautJwtToken custom setting.
*************************************************************************************************************************/
    public DTOStatus CreateGetRageHeronCallout(DTOQuoteRateRequest reqDTO){
        DTOStatus status=new DTOStatus();
        
        try{
            
           // User iUser=userDAOInstance.getUserByName(integrationName);//HERON_IntegrationName);
            oAuthUtil =new APIJwtOAuthUtility(this.integrationName);//iUser.id); //call to get token
            String accessToken=oAuthUtil.getAccessToken();
            
            if(accessToken!=null){
                String reqBody = JSON.serialize(reqDTO);
                
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,reqBody,'POST');
                system.debug('request: '+req);
                system.debug('request body: '+req.getBody());
                
                Http http = new Http();
                
                HttpResponse res=http.send(req);//InvokeService(req);
                system.debug('resonse:'+res);
                
                String jsonStr=null;
                
                if(res!=null){
                    jsonStr=res.getbody();
                    system.debug('response json str: '+jsonStr);
                    system.debug('response body:'+res.getBody()+' res.getStatusCode()::'+res.getStatusCode());
                    
                    if(String.valueOf(res.getStatusCode())=='201' ){ 
                        
                        status.statusCode='201';
                        status.statusMessage='Quote Request:'+reqDTO.quoteReqId+' is Successfully received by Heron.';
                        status.errorMessage=null;
                        
                    }else{
                        status.statusCode=String.valueOf(res.getStatusCode());//'401';
                        status.statusMessage='Error! Failed to send Quote Request to Heron. Please contact System Administrator.';
                        status.errorMessage=jsonResult(jsonStr,'errorMessage');//res.getStatus();//'Error! Failed to send Quote Request to Heron. Please contact System Administrator.';
                        system.debug(' error message:'+status.errorMessage);
                    }
                }
                
                
            }else{
                status.statusCode='Failed';
                status.statusMessage='Your request can not be completed, please contact System Administrator.';
                status.errorMessage='Retrieve JWT OAuthToken Error!';
                system.debug('Error!!!! jwt OauthToken is null');
            }
            system.debug('doing token update....');
            //update token back to custom setting
            if(oAuthUtil!=null && oAuthUtil.updateTokenSetting){
                try{
                    oAuthUtil.updateToken(accessToken);
                    
                }catch(Exception e){
                    system.debug(' update token exception, moving forward');
                    return status;      
                    //return Status;
                }
            }
            
        }catch (Exception e){
            system.debug(' CallOut exception: '+e);
            status.statusCode='Failed';
            status.statusMessage='Your request can not be completed, please contact System Administrator.';
            status.errorMessage=e.getMessage();
            
        }
        return status;
    }    
    
    @TestVisible
    
    /**
** Httpe request  for any service callout with Mulesoft endpoint set up from DP/Mulesoft side.  
** As 11/17/2017 Heron callout is set up with Mulesoft endpoint
**/    
    private  HttpRequest setupMuleSoftHttpRequest(String jwtToken, String reqBody,String reqMethod){
        
        HttpRequest request=new HttpRequest(); 
        
        /* mulesoft endpoint header setting */
        system.debug('set authorization with accesstoken--->'+jwtToken+'<-----');
        request.setHeader('Authorization', 'Bearer ' + jwtToken); // muselsoft in samTEST
        //
        /***end mulesfot --*/
        
        system.debug('header setting::'+request.getHeader('Authorization'));
        
        if(endpoint!=null){
            request.setEndpoint(endPoint);
        }
        request.setMethod(reqMethod);//'POST');
        request.setCompressed(false);
        request.setHeader('Accept','application/json');
        request.setheader('Content-Type','application/json');
        
        if(certificate!=null){
            request.setClientCertificateName(certificate);
        }
        
        system.debug('jwtToken: '+jwtToken);
        
        // String reqBody = JSON.serialize(reqDTO);
        system.debug('request body: '+reqBody);
        if(reqBody!=null){
            request.setBody(reqBody);
            system.debug(LoggingLevel.INFO,'Quote Request: '+reqBody);
        }
        
        return request;
        
    }
    
    
    @TestVisible
    
    /**@author Mei Chen
** Httpe request  for any service callout with DataPower endpoint set up from DP/Mulesoft side.  
** As of 11/17/2017 GFRA Adjuster Tool callout is set up with DataPower endpoint. don't ask why. 
**/
    private HttpRequest setupDPHttpRequest(String jwtToken, String reqBody){
        
        HttpRequest request=new HttpRequest(); 
        
        //data power endpoint header setting  
        Blob headerValue = Blob.valueOf(userName + ':' + password);        
        String authorizationHeader = 'Basic ' + EncodingUtil.base64Encode(headerValue);
        system.debug(LoggingLevel.DEBUG, '64Encoded Basic from service: ' + authorizationHeader);
        request.setHeader('Authorization', authorizationHeader+','+'Bearer '+jwtToken);  // in samsit as 9/19/2017
        //--end of data power endpoint header setting 
        
        /* mulesoft endpoint header setting */
        // system.debug('set authorization with accesstoken--->'+jwtToken+'<-----');
        //request.setHeader('Authorization', 'Bearer ' + jwtToken); // muselsoft in samTEST
        //
        /***end mulesoft --*/
        
        system.debug('header setting::'+request.getHeader('Authorization'));
        if(endPoint!=null){
            request.setEndpoint(endPoint);
        }
        if(certificate!=null){
            request.setClientCertificateName(certificate);
        }
        request.setMethod('POST');
        request.setCompressed(false);
        request.setHeader('Accept','application/json');
        request.setheader('Content-Type','application/json');
        
        
        system.debug('jwtToken: '+jwtToken);
        
        // String reqBody = JSON.serialize(reqDTO);
        system.debug('request body: '+reqBody);
        
        request.setBody(reqBody);
        
        system.debug(LoggingLevel.INFO,'Quote Request: '+reqBody);
        
        return request;
        
    }
    
    @TestVisible
    private String jsonResult (String jsonBody, String fieldName){
        
        
        JSONParser parser = JSON.createParser(jsonBody);
        
        String token = null;
        
        try {
            
            while (parser.nextToken() != null) {
                if ((parser.getCurrentToken() == JSONToken.FIELD_NAME) && (parser.getText() == fieldName)) {  
                    parser.nextToken();
                    token = parser.getText();
                    system.debug(' message:'+token);
                }
            }
            
        } catch (JSONException e) {
            system.debug('json exception: '+e);
            token=' Json Exception: '+e;
        }
        return token;
    }
    
    // SFDC - 14001 callout method for GSPS GetAllAvailablePlan service
    public SGR_GSPS_GetAvailablePlanServiceResponse invokeGetAllAvailablePlanService(SGR_GSPS_GetAvailablePlanServiceRequest request){
        String accessToken = null;  
        String jsonStr=null;
        String requestBody=null;
        String resStatus=null;
        String errorDesc=null;
        String statusCode=null;
        Datetime executeStartDate=System.now();
        
        SGR_GSPS_GetAvailablePlanServiceResponse response = new SGR_GSPS_GetAvailablePlanServiceResponse() ;
        try{            
            
          //  User iUser = userDAOInstance.getUserByName(this.integrationName);             
            oAuthUtil = new APIJwtOAuthUtility(this.integrationName);//iUser.id);
            
            system.debug('new accesstoken:::: '+newAccessToken);
            if(newAccessToken!=null && !IsTokenExpired()){//only getPlanservice set up to work with this step to avoid #of token WS call.
                accessToken=newAccessToken;
            }else{
                accessToken = oAuthUtil.getAccessToken();
                newAccessToken=accessToken;
                lastTokenUpdateDateTime=oAuthUtil.lastTokenUpdateDateTime;
            }
            
            system.debug('accessToken JWT::: '+accesstoken);
            
            if(accessToken != null){
                
                HttpRequest req = setupGSPSGetAvailablePlanRequest( accessToken,request);
                system.debug('setupGSPSGetAvailablePlanRequest:: '+req);
                
                requestBody = req.getEndpoint();
                Http http = new Http();
                executeStartDate = System.now();
                HttpResponse res = http.send(req);
                system.debug('resonse:'+res);
                if (null != res) {
                    jsonStr = res.getbody();
                    statusCode = String.valueOf(res.getStatusCode());
                    resStatus = statusCode;
                    
                    
                    if (statusCode == '200') {                       
                        response = (SGR_GSPS_GetAvailablePlanServiceResponse) System.JSON.deserialize(jsonStr,SGR_GSPS_GetAvailablePlanServiceResponse.class);
                        response.statusCode='S';    
                        
                    } else {                            
                        response.statusCode = resStatus = 'E';
                        errorDesc = response.errorMessage = 'Your request can not be completed, please contact System Administrator. statusCode = ' + statusCode + ' (500 - Internal server Eroor; 404 - Resource Not Found; 403 - Permission Denied; 400 - Invalid Input)';                        
                    }
                    
                    if (requestBody.length() > 131000)
                        requestBody = requestBody.substring(0,131000);                      
                    response.reqBody = requestBody;
                    
                    if (jsonStr.length() > 131000)
                        jsonStr = jsonStr.substring(0,131000);                    
                    response.respBody = jsonStr;
                    
                    response.execStart = executeStartDate;
                    response.execEnd = System.now();
                    
                    if(OAuthUtil.updateTokenSetting){
                        newAccessToken=accessToken;
                        try{
                            //   oAuthUtil.updateToken(accessToken);
                            system.debug('update token custom setting...');
                        }catch(Exception e){
                            system.debug(' update token exception, moving forward');
                            return response;
                        } 
                    }              
                }
            } else {
                response.statusCode=resStatus='E';
                response.statusMessage='Your request can not be completed, please contact System Administrator.';
                response.errorMessage=errorDesc='Retrieve JWT OAuthToken Error!';
                system.debug('Error!!!! jwt OauthToken is null');
            }
        }catch (Exception e){
            system.debug('Line#: ' + e.getLineNumber() + ' - GSPS GetAllAvailablePlan Service CallOut exception: '+e);
            response.statusCode=resStatus='Failed';
            response.statusMessage='Your request can not be completed, please contact System Administrator.';
            response.errorMessage=errorDesc=e.getMessage();   
        }
        System.debug('Calling insertIntegrationLog');
        //Utility.insertIntegrationLog('GetAllAvailablePlanService',null,resStatus,errorDesc,executeStartDate, System.now(),requestBody,jsonStr);
        return response;
    }
    
    // SFDC - 14001 create request for GSPS GetAllAvailablePlan service
    public HttpRequest setupGSPSGetAvailablePlanRequest(String  accessToken, SGR_GSPS_GetAvailablePlanServiceRequest request) { 
        
       // User iUser = userDAOInstance.getUserByName(this.integrationName); 
       // oAuthUtil = new APIJwtOAuthUtility(iUser.id);
        //  String accessToken = oAuthUtil.getAccessToken();
        HttpRequest httpRequest = setupMuleSoftHttpRequest(accessToken, null, 'GET');  
        system.debug('access token:'+accessToken);
        system.debug('clientId:'+oAuthUtil.clientId);
        system.debug('clientSecret:'+oAuthUtil.ClientSecret);
        httpRequest.setHeader('ClientId',oAuthUtil.clientId);
        httpRequest.setHeader('ClientSecret',oAuthUtil.ClientSecret);
        Date effectiveDate=request.effectiveDate;
        String effectiveDateStr=effectiveDate.Year()+'-'+effectiveDate.month()+'-'+effectiveDate.day();
        endPoint =  endpoint + request.productGroupCd + '/planGroups/plans?clientId='+ request.clientId + '&effectiveDate=' + effectiveDateStr + '&division=' + request.division + '&marketSegment=' + request.marketSegment + '&fundingType='+ request.fundingType + '&version='+ request.version+'&fipsCode='+request.fipsCode;
        //endPoint = 'https://api-sit.hcsctest.net/gsps/productGroup/BASO_IL/planGroups/plans?clientId=QUOTING&effectiveDate=2019-01-01&division=IL&marketSegment=SG&fundingType=BASO&version=1';
        httpRequest.setEndpoint(endPoint);
        return httpRequest;
    }
    
    
    // SFDC - 14574 , To fetch the response for URE Opportunity Rating 
   public SGR_URE_GetRatingsResponse invokeUREOppRating(SGR_URE_GetAgeRatesRequestWrapper requestWrapper)
    {
        SGR_URE_GetRatingsResponse response = new SGR_URE_GetRatingsResponse();
        String jsonStr=null;
        String requestBody=null;
        String resStatus=null;
        String errorDesc=null;
        Datetime executeStartDate=System.now();
        //String unExpiredAccessToken;
        try{
          //  User iUser = userDAOInstance.getUserByName(this.integrationName); 
            oAuthUtil = new APIJwtOAuthUtility(this.integrationName);//iUser.id);
            String accessToken = oAuthUtil.getAccessToken();
            if(accessToken != null) {                
                String reqBody = JSON.serialize(requestWrapper,true);   
                system.debug('reqBody:::::'+reqBody);
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,reqBody,'POST');
                system.debug('clientId:'+oAuthUtil.clientId);
                system.debug('clientSecret:'+oAuthUtil.ClientSecret);
                req.setHeader('ClientId',oAuthUtil.clientId);
                req.setHeader('ClientSecret',oAuthUtil.ClientSecret);
                req.setTimeout(120000);
                system.debug('request: '+req);
                system.debug('request body: '+req.getBody());
                requestBody=req.getBody();
                Http http = new Http();
                HttpResponse res=http.send(req);  //InvokeService(req);
                 system.debug('response:'+res);   
                if(res!=null){
                    
                    jsonStr=res.getbody();
                   // system.debug('jsonResponse from service: '+jsonStr);
                    //jsonStr='{      "rffResult": { "marketingDentalRatesSpecificTaskResult": {     "ratingPackageResults": [  {    "productResults": [ {   "planResults": [       {    "areaResults": [      {   "areaNumber": "100",   "isTefra": "false",   "isTobacco": "false",   "rates": [     {  "censusDetailId": "860534",  "grossPremium": "43.66",  "retentionBreakdown": {      "ACAFees": "0.00",      "Net_of_ACA": "43.66",      "nonACAFees": "14.04"  },  "subscriberId": "860534"     }   ]      }    ]       }   ],   "value": "PPO" }    ]  }     ] },    "ratingPackageResults": [  {    "productResults": [ {   "planResults": [       {    "areaResults": [      {   "areaNumber": "2",   "isTefra": "false",   "isTobacco": "false",   "rates": [     {  "censusDetailId": "860534",  "grossPremium": "318.05",  "retentionBreakdown": {      "ACAFees": "0.48",      "Net_of_ACA": "317.57",      "nonACAFees": "41.97"  },  "subscriberId": "860534"     },     {  "censusDetailId": "860535",  "grossPremium": "306.64",  "retentionBreakdown": {      "ACAFees": "0.46",      "Net_of_ACA": "306.18",      "nonACAFees": "40.46"  },  "subscriberId": "860535"     }   ]      }    ],    "compositeRateResults": [      {   "tierResult": [     {  "tierRate": [      { "ACAFees": "0.47", "grossPremium": "312.35", "tier": "EO"      },      { "ACAFees": "0.87", "grossPremium": "577.85", "tier": "EC"      },      { "ACAFees": "0.94", "grossPremium": "624.70", "tier": "ES"      },      { "ACAFees": "1.34", "grossPremium": "890.20", "tier": "EF"      }  ],  "type": "4"     }   ]      }    ],    "coverageCode": "M",    "demographicFactorClass": "1 ",    "optionResults": [      {   "optionDetails": [     {  "areaFactorClass": "62",  "benefitName": "36096IL0900038",  "benefitType": "MEDICAL"     }   ]      }    ],    "planId": "SPSG10BCOSILO"       }   ],   "value": "BOPT MED" }, {   "planResults": [       {    "areaResults": [      {   "areaNumber": "2",   "isTefra": "false",   "isTobacco": "false",   "rates": [     {  "censusDetailId": "860534",  "grossPremium": "403.08",  "retentionBreakdown": {      "ACAFees": "0.60",      "Net_of_ACA": "402.48",      "nonACAFees": "53.19"  },  "subscriberId": "860534"     },     {  "censusDetailId": "860535",  "grossPremium": "388.62",  "retentionBreakdown": {      "ACAFees": "0.58",      "Net_of_ACA": "388.04",      "nonACAFees": "51.28"  },  "subscriberId": "860535"     }   ]      }    ],    "compositeRateResults": [      {   "tierResult": [     {  "tierRate": [      { "ACAFees": "0.59", "grossPremium": "395.85", "tier": "EO"      },      { "ACAFees": "1.10", "grossPremium": "732.32", "tier": "EC"      },      { "ACAFees": "1.19", "grossPremium": "791.70", "tier": "ES"      },      { "ACAFees": "1.69", "grossPremium": "1128.17", "tier": "EF"      }  ],  "type": "4"     }   ]      }    ],    "coverageCode": "M",    "demographicFactorClass": "1 ",    "optionResults": [      {   "optionDetails": [     {  "areaFactorClass": "1",  "benefitName": "36096IL0770045",  "benefitType": "MEDICAL"     }   ]      }    ],    "planId": "SPSG10PPOSILO"       }   ],   "value": "PPO MED" }    ]  }     ] }, "rateSize": "A", "referenceId": "13127874"      }  }';
                    //system.debug('response json str: '+jsonStr);
                    //system.debug('response body:'+res.getBody()+' res.getStatusCode()::'+res.getStatusCode());
                    String statusCode = String.valueOf(res.getStatusCode());
                    resStatus=statusCode;
                    if(statusCode == '200'){
                        
                        //System.debug('Inside 200');
                        // jsonStr = '{"Age Rates":' + jsonStr + '}';
                        response = (SGR_URE_GetRatingsResponse) System.JSON.deserialize(jsonStr,SGR_URE_GetRatingsResponse.class);
                        system.debug('deserialize response : '+response);
                        response.statusCode='Success';
                        
                    }
                    else{
                        response.statusCode=resStatus='Failed';
                        response.errorMessage=response.statusMessage=errorDesc='Your request can not be completed, please contact System Administrator. statusCode = ' + statusCode + ' (500 - Internal server Eroor; 404 - Resource Not Found; 403 - Permission Denied; 400 - Invalid Input)';
                        system.debug(response.errorMessage);    
                    }
                }
                system.debug('<<URE Opportunity Rating Service CallOut Response>>'+response); 
                
                
                if(OAuthUtil.updateTokenSetting){
                    try{
                        //oAuthUtil.updateToken(accessToken);
                        system.debug('update token custom setting...');
                    }catch(Exception e){
                        
                        system.debug(' update token exception, moving forward');
                        return response;
                    }
                } 
            }else{
                response.statusCode=resStatus='Failed';
                response.statusMessage='Your request can not be completed, please contact System Administrator.';
                response.errorMessage=errorDesc='Retrieve JWT OAuthToken Error!';
                system.debug('Error!!!! jwt OauthToken is null');
            } 
            
        }      
        catch(Exception e)
        {
            system.debug('Line#: ' + e.getLineNumber() + ' - URE Opportunity Rating CallOut exception: '+e);
            response.statusCode=resStatus='Failed';
            response.statusMessage='Your request can not be completed, please contact System Administrator.';
            response.errorMessage=errorDesc=e.getMessage();  
        }        
        
        //Utility.insertIntegrationLog('invokeUREAgeRateService',null,resStatus,errorDesc,executeStartDate,system.now(),requestBody,jsonStr);
        return response;
        
    } 
    
    // SFDC - 14568 , To fetch the response for AgeRates //@Akbar - added accessToken to method to avoid token expire issue
   public SGR_URE_GetRatingsResponse invokeUREAgeRates(SGR_URE_GetAgeRatesRequestWrapper requestWrapper)
    {
        SGR_URE_GetRatingsResponse response = new SGR_URE_GetRatingsResponse();
        String jsonStr=null;
        String accessToken = null; 
        try{
            //@Akbar - The below lines commented to avoid token expire issue and calling from SGR_GenerateAgeRateTablesBatch
       
           oAuthUtil = new APIJwtOAuthUtility(this.integrationName);//iUser.id);
            
            system.debug('new accesstoken:::: '+newAccessToken);
            if(newAccessToken!=null && !IsTokenExpired()){//only getPlanservice set up to work with this step to avoid #of token WS call.
                accessToken=newAccessToken;
                system.debug('new accesstoken????:::: '+newAccessToken);
            }else{
                accessToken = oAuthUtil.getAccessToken();
                newAccessToken=accessToken;
                lastTokenUpdateDateTime=oAuthUtil.lastTokenUpdateDateTime;
                system.debug('new accesstoken????####:::: '+newAccessToken);
                system.debug('lastTokenUpdateDateTime????####:::: '+lastTokenUpdateDateTime);
            }
            
            system.debug('accessToken JWT::: '+accesstoken);
           /* if(newAccessToken!=null && !IsTokenExpired()){ //only getPlanservice set up to work with this step to avoid #of token WS call.
                accessToken=newAccessToken;
            }else{
                accessToken = oAuthUtil.getAccessToken();
                newAccessToken=accessToken;
                lastTokenUpdateDateTime=oAuthUtil.lastTokenUpdateDateTime;
            }*/
            
            //system.debug('accessToken JWT::: '+accesstoken);
           if(accessToken != null){
                
                String reqBody = JSON.serialize(requestWrapper,true);   
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,reqBody,'POST');
                //system.debug('clientId:'+oAuthUtil.clientId);
                //system.debug('clientSecret:'+oAuthUtil.ClientSecret);
                req.setHeader('ClientId',oAuthUtil.clientId);
                req.setHeader('ClientSecret',oAuthUtil.ClientSecret);
                req.setTimeout(120000);
                //system.debug('request: '+req);
                //system.debug('request body: '+req.getBody());
                response.req = req.getBody();
                Http http = new Http();
                HttpResponse res=http.send(req);  //InvokeService(req); 
                if(res!=null){
                    
                    jsonStr=res.getbody();
                    String statusCode = String.valueOf(res.getStatusCode());
                    if(statusCode == '200'){
                        //System.debug('Inside 200');
                        response = (SGR_URE_GetRatingsResponse) System.JSON.deserialize(jsonStr,SGR_URE_GetRatingsResponse.class);
                        //system.debug('deserialize response : '+response);
                        response.statusMessage= 'Success';                  
                    }
                    else{
                        response.statusMessage= statusCode +'-Failed';
                        response.errorMessage='Your request can not be completed, please contact System Administrator. statusCode = ' + statusCode + ' (500 - Internal server Eroor; 404 - Resource Not Found; 403 - Permission Denied; 400 - Invalid Input)';
                        response.res = jsonStr;  
                        response.executeStartDate = System.now();                   
                    }
                }
                //system.debug('<<URE Age Rate  Service CallOut Response>>'+response); 
                
           }else{ 
                response.statusMessage='Failed';
                response.errorMessage='Retrieve JWT OAuthToken Error! Your request can not be completed, please contact System Administrator.';
                response.executeStartDate = System.now();
            } 
            
        }      
        catch(Exception e)
        {
            system.debug('Line#: ' + e.getLineNumber() + ' - URE Age Rates CallOut exception: '+e);
            response.statusMessage='Failed';
            response.errorMessage=e.getMessage();
            response.executeStartDate = System.now();
        }        
        
        //Utility.insertIntegrationLog('invokeUREAgeRateService',null,resStatus,errorDesc,executeStartDate,system.now(),requestBody,jsonStr);
        return response;
        
    }     
    
    
    
    
    //SFDC - 14273 , To fetch the response for ProductGroups 
    public SGR_GSPS_ProductGroupResponseWrapper invokeProductGroupService(SGR_GSPS_ProductGroupRequestWrapper requestWrapper){
        
        SGR_GSPS_ProductGroupResponseWrapper response = new SGR_GSPS_ProductGroupResponseWrapper();
        response.responseItemsList = new list<SGR_GSPS_ProductGroupResponseWrapper.SGR_GSPS_ProductGroupResponseItems>();
        String jsonResStr = '';
        String requestBody=null;
        String resStatus=null;
        String errorDesc=null;
        Datetime executeStartDate=System.now();
        
        try{
         //   User iUser = userDAOInstance.getUserByName(this.integrationName);             
            oAuthUtil = new APIJwtOAuthUtility(this.integrationName);//iUser.id);
            String accessToken = oAuthUtil.getAccessToken();
            
            if(accessToken != null){
                Date effectiveDate=requestWrapper.effectiveDate;
                String effectiveDateStr=effectiveDate.Year()+'-'+effectiveDate.month()+'-'+effectiveDate.day();
                system.debug('*************Access token Not Null****************');
                String myendpoint =endPoint + '?clientId='+requestWrapper.clientId+'&version='+requestWrapper.version+'&marketSegment='+requestWrapper.marketSegment+'&effectiveDate='+effectiveDateStr+'&division='+requestWrapper.division+'&fundingType='+requestWrapper.fundingType+'&fipsCode='+requestWrapper.fipsCode;
                //endPoint + '?clientId='+requestWrapper.clientId+'&marketSegment='+requestWrapper.marketSegment+'&effectiveDate='+requestWrapper.effectiveDate+'&division='+requestWrapper.division+'&fundingType='+requestWrapper.fundingType;//+'&planNames='+requestWrapper.planNames;
                
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,null,'GET');
                system.debug('clientId:'+oAuthUtil.clientId);
                system.debug('clientSecret:'+oAuthUtil.ClientSecret);
                req.setEndpoint(myendpoint);
                system.debug('*************END POINT******'+myendpoint);
                req.setHeader('ClientId',oAuthUtil.clientId);
                req.setHeader('ClientSecret',oAuthUtil.ClientSecret);
                
                system.debug('<<Product Group Request**************>>'+req);
                //requestBody=myendpoint;//req.getBody();
                
                Http http = new Http();
                HttpResponse res = http.send(req);
                system.debug('***************productGroup response:'+res+' statusCode'+res.getStatusCode());
                system.debug('***************response Body:'+res.getBody());
                
                if(res!=null){
                    resStatus=String.valueOf(res.getStatusCode());
                    
                    if(res.getStatusCode() == 200){
                        
                        jsonResStr = res.getbody();
                        system.debug('jsonResStr;;;;;;;;;'+jsonResStr);
                    }
                }
                
                //  response = (SGR_GSPS_ProductGroupResponseWrapper) System.JSON.deserialize(jsonResStr,SGR_GSPS_ProductGroupResponseWrapper.class);
                response.responseItemsList = SGR_GSPS_ProductGroupResponseWrapper.parse(jsonResStr);
                system.debug('<<GSPS Product Group Service CallOut Response>>'+response);
                if(OAuthUtil.updateTokenSetting){
                    newAccessToken=accessToken;
                 
                }
            }else{
                response.statusCode='Failed';
                response.statusMessage='Your request can not be completed, please contact System Administrator.';
                response.errorMessage='Retrieve JWT OAuthToken Error!';
                resStatus='Failed';
                errorDesc='Retrieve JWT OAuthToken Error!';
                system.debug('Error!!!! jwt OauthToken is null');
            }
        }catch (Exception e){
            system.debug('GSPS Product group Service CallOut exception: '+e);
            resStatus='failed';
            errorDesc=e.getMessage();
            response.statusCode='Failed';
            response.statusMessage='Your request can not be completed, please contact System Administrator.';
            response.errorMessage=e.getMessage();
        }
        system.debug('******************UTILITY INSERTION*******************');

     integrationStatuLog=Utility.getIntegrationLog('invokeProductGroupService', 
                                                      null, 
                                                      resStatus,
                                                      errorDesc,
                                                      executeStartDate,
                                                      system.now(),
                                                      requestBody, 
                                                      jsonResStr);
        
        return response;
    }
    
    //SFDC - 14005 , Capture the response for Plan Mapping request// Padma Bedampeta Start
    public SGR_GSPS_GetAvailablePlanServiceResponse invokePlanMappingService(SGR_GSPS_GetMappedPlansRequestDAO requestWrapper){
        SGR_GSPS_GetAvailablePlanServiceResponse response = new SGR_GSPS_GetAvailablePlanServiceResponse();
        // String jsonResStr = '';
        String jsonStr=null;
        String requestBody=null;
        String resStatus=null;
        String errorDesc=null;
        Datetime executeStartDate=System.now();
        
        try{
          //  User iUser = userDAOInstance.getUserByName(this.integrationName); 
            oAuthUtil = new APIJwtOAuthUtility(this.integrationName);//iUser.id);
             system.debug('-- intigration name---->'+this.integrationName);
            String accessToken = oAuthUtil.getAccessToken();
            if(accessToken != null){
                String reqBody = JSON.serialize(requestWrapper,true);
                system.debug('reqBody:::::'+reqBody);
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,reqBody,'POST');
                system.debug('clientId:'+oAuthUtil.clientId);
                system.debug('clientSecret:'+oAuthUtil.ClientSecret);
                req.setHeader('ClientId',oAuthUtil.clientId);
                req.setHeader('ClientSecret',oAuthUtil.ClientSecret);
                system.debug('request: '+req);
                system.debug('request body: '+req.getBody());
                requestBody=req.getBody();
                Http http = new Http();
                HttpResponse res=http.send(req);  //InvokeService(req);
                system.debug('resonse:'+res);
                if(res!=null){
                    jsonStr=res.getbody();
                    system.debug('response json str: '+jsonStr);
                    system.debug('response body:'+res.getBody()+' res.getStatusCode()::'+res.getStatusCode());
                    String statusCode = String.valueOf(res.getStatusCode());
                    resStatus=statusCode;
                    
                    if(statusCode == '200'){
                        
                        // SFDC-14006, add a few fields to make it SGR_GSPS_GetAvailablePlanServiceResponse formatted
                        jsonStr = '{"planGroups":' + jsonStr + '}';
                        response = (SGR_GSPS_GetAvailablePlanServiceResponse) System.JSON.deserialize(jsonStr,SGR_GSPS_GetAvailablePlanServiceResponse.class);
                        response.statusCode='Success';
                        system.debug('deserialize response : '+response);
                    }else{                        
                        response.statusCode=resStatus='Failed';
                        response.errorMessage=response.statusMessage=errorDesc='Your request can not be completed, please contact System Administrator. statusCode = ' + statusCode + ' (500 - Internal server Eroor; 404 - Resource Not Found; 403 - Permission Denied; 400 - Invalid Input)';
                        system.debug(response.errorMessage);    
                    }
                }
                system.debug('<<GSPS Plan Mapping Service CallOut Response>>'+response);
                if(OAuthUtil.updateTokenSetting){
                    try{
                        newAccessToken=accessToken;
                        // oAuthUtil.updateToken(accessToken);
                        system.debug('update token custom setting...');
                    }catch(Exception e){
                        
                        system.debug(' update token exception, moving forward');
                        return response;
                    }
                }
            }else{
                response.statusCode=resStatus='Failed';
                response.statusMessage='Your request can not be completed, please contact System Administrator.';
                response.errorMessage=errorDesc='Retrieve JWT OAuthToken Error!';
                system.debug('Error!!!! jwt OauthToken is null');
            }
        }catch (Exception e){
            system.debug('Line#: ' + e.getLineNumber() + ' - GSPS Plan Mapping CallOut exception: '+e);
            response.statusCode=resStatus='Failed';
            response.statusMessage='Your request can not be completed, please contact System Administrator.';
            response.errorMessage=errorDesc=e.getMessage();
        }
        Utility.insertIntegrationLog('invokePlanMappingService',null,resStatus,errorDesc,executeStartDate,system.now(),requestBody,jsonStr);
        return response;
    }
    //SFDC - 14005 , Capture the response for Plan Mapping request// Padma Bedampeta End
    
  /*
**@Author Mei Chen
**this method is check if the current token is expired or not, used when call plan services in loop to avoid unncessary token ws calls.
*/
    private boolean IsTokenExpired(){
        DateTime nowTime=DateTime.now();
        decimal minDuration = ((nowTime.getTime()/1000/60) - (lastTokenUpdateDateTime).getTime()/1000/60);   
        system.debug('minDuration from ApiCalloutRestWSUtility:::'+minDuration);
        if(minDuration>30){//great than 30 min
            return true;
        }else{
            return false;
        }
    }
    
   //Bengaged callout
      Public SGR_Beng_XML_Response SendBengCallout(id oppId,String printType,string documentVersion, String DocumentType, string correspondenceId,string source){
      SGR_Beng_XML_Response Response = new SGR_Beng_XML_Response();
          Datetime executeStartDt = system.now();
            //Auth token
            // User iUser = userDAOInstance.getUserByName(this.integrationName); 
            oAuthUtil = new APIJwtOAuthUtility(this.integrationName);//iUser.id);
            // system.debug('iUser--->'+iUser+'-- intigration name---->'+this.integrationName);
            String accessToken = oAuthUtil.getAccessToken();
             system.debug('accessToken--->'+accessToken);
             system.debug('oAuthUtil--->'+oAuthUtil);
        if(accessToken != null){
                //Request Paramers 
                // SGR_Beng_RequestHelper sbr = new SGR_Beng_RequestHelper(oppid);
                SGR_Beng_XML_TemplateDAO xmlDAO = new SGR_Beng_XML_TemplateDAO();
                SGR_Beng_XML_Input DocXmlWrapper = new SGR_Beng_XML_Input();
                DocXmlWrapper.documentVersion = xmlDAO.docVer = documentVersion;
                DocXmlWrapper.correspondenceId = xmlDAO.correspondenceId = correspondenceId;
                DocXmlWrapper.documentType=xmlDAO.docType = DocumentType;
                DocXmlWrapper.source=xmlDAO.source = source;
                // need to generate document data
                xmlDAO.oppId = oppId;
                xmlDAO.printType =printType;
                DocXmlWrapper.documentData = xmlDAO.createXmlDoc();
               // DocXmlWrapper.documentData ='';
                String reqBody = JSON.serialize(DocXmlWrapper,true);
                system.debug('reqBody:::::'+reqBody);
                HttpRequest req=setupMuleSoftHttpRequest(accessToken,reqBody,'GET');
                system.debug('clientId:'+oAuthUtil.clientId);
                system.debug('clientSecret:'+oAuthUtil.ClientSecret);
                req.setHeader('ClientId',oAuthUtil.clientId);
                req.setHeader('ClientSecret',oAuthUtil.ClientSecret);
                system.debug('printing endpoint::'+endpoint);
                req.setEndpoint(endpoint);
                system.debug('request: '+req);
                system.debug('request body: '+req.getBody());
                string requestBody=req.getBody();
                Http http = new Http();
                HttpResponse res=http.send(req);  //InvokeService(req);
                system.debug('resonse:'+res);
                if(res!=null){
                    string jsonStr=res.getbody();
                    system.debug('response json str: '+jsonStr);
                    system.debug('response body:'+res.getBody()+' res.getStatusCode()::'+res.getStatusCode());
                    String statusCode = String.valueOf(res.getStatusCode());
                    string resStatus=statusCode;
                    
                    if(statusCode == '200'){
                        system.debug('-->'+res.getBody());
                        response = (SGR_Beng_XML_Response) System.JSON.deserialize(jsonStr,SGR_Beng_XML_Response.class);
                        response.status='Success';
                        system.debug('deserialize response : '+response);
                        //Vijaya - Integration Log
                        Utility.insertIntegrationLog('B-Engage Callout', 
                                                      Id.valueof(oppId), 
                                                      statusCode,
                                                      '',
                                                      executeStartDt,
                                                      system.now(),
                                                      '', 
                                                      '');//res.getBody());
                                //
                        return response;
                    }else{                        
                        response.status=resStatus='Failed';
                        response.errorMessage=response.status=Response.errorDesc='Your request can not be completed, please contact System Administrator. statusCode = ' + statusCode + ' (500 - Internal server Eroor; 404 - Resource Not Found; 403 - Permission Denied; 400 - Invalid Input)';
                        //Vijaya - Integration Log
                        Utility.insertIntegrationLog('B-Engage Callout', 
                                                      Id.valueof(oppId), 
                                                      statusCode,
                                                      '',
                                                      executeStartDt,
                                                      system.now(),
                                                      '', 
                                                      '');//res.getBody());
                                //
                        return response;
                        //system.debug(response.errorMessage);    
                    }
                }else{
                    response.status='Failed';
                    response.errorMessage=response.status=Response.errorDesc='Unknown Error Occured';
                    return response;
                }
        }else{
            response.status='Failed';
            response.errorMessage=response.status=Response.errorDesc='Invalid Access Token';
        }
        return response;
    }
    public SGR_BlueStarTransferResponse BlueStartAutomationUpdateCallOut(Id oppId, string requestBody){
        
        //String requestBody=null;
        String resStatus=null;
        String resBody=null;
        String statusCode=null;
        Datetime executeStartDate=System.now();
        SGR_BlueStarTransferResponse blueStarresponse = new SGR_BlueStarTransferResponse();
        // SGR_BlueStarTransferCallout requestXML = new SGR_BlueStarTransferCallout();
        //  requestBody = requestXML.createXMLDoc(opp);
        system.debug('createXMLRequest Request Body::::::'+requestBody);
        
        HttpRequest req = new HttpRequest();
        Http http = new Http();
        // Specify the required user name and password to access the endpoint
        // As well as the header and header information
        
        String buserName = this.userName;
        String bpassword = this.Password;
        String clientId = this.clientId;
        String clientSecret = this.clientSecret;
        String endPoint = this.endpoint;
        String reqMethod = 'POST';
        
        system.debug('clientId:::'+clientId);
        system.debug('clientSecret:::'+clientSecret);
        
        Blob headerValue = Blob.valueOf(buserName + ':' + bpassword);        
        String authorizationHeader = 'Basic ' + EncodingUtil.base64Encode(headerValue);
        system.debug(LoggingLevel.DEBUG, '64Encoded Basic from service: ' + authorizationHeader);
        req.setEndpoint(endPoint);
        req.setMethod(reqMethod);
        req.setHeader('Authorization', authorizationHeader); 
        req.setHeader('clientId',clientId);
        req.setHeader('clientSecret',clientSecret);
        req.setheader('Content-Type','application/xml');
        req.setBody(requestBody);
        
        // Create a new http object to send the request object
        // A response object is generated as a result of the request 
        
        HTTPResponse res = http.send(req);
        System.debug(res.getBody());
        system.debug(res.getStatusCode());
        system.debug(res.getStatus());
        system.debug(res.toString());
        if(res.getStatusCode() != Null)
        {
            statusCode = String.valueOf(res.getStatusCode());
            resStatus = res.getStatus();
            resBody = res.getBody();            
            
            blueStarresponse.status = String.valueOf(res.getStatusCode());
            blueStarresponse.statusCode = res.getStatus();
            blueStarresponse.message =  res.getBody();         
        }
        integrationStatuLog=Utility.getIntegrationLog('BlueStarPlanChangeOrRateChangeService', 
                                                      oppId, 
                                                      statusCode,
                                                      resStatus,
                                                      executeStartDate,
                                                      system.now(),
                                                      requestBody, 
                                                      resBody);
        system.debug('integrationStatuLog:::::::'+integrationStatuLog);
        //Utility.insertIntegrationLog('BlueStarPlanChangeOrRateChangeService',oppId,statusCode,resStatus,executeStartDate,system.now(),requestBody,resBody);
        return blueStarresponse;
    }
  
}