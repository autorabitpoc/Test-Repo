<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <processMetadataValues>
            <name>postTarget</name>
            <value>
                <stringValue>Private Exchange</stringValue>
            </value>
        </processMetadataValues>
        <processMetadataValues>
            <name>textJson</name>
            <value>
                <stringValue>{&quot;mentions&quot;:[],&quot;message&quot;:&quot;The account  {![Opportunity].Account.Name} has a Private Exchange opportunity {![Opportunity].Name} &quot;}</stringValue>
            </value>
        </processMetadataValues>
        <name>myRule_1_A1</name>
        <label>Chatter Post</label>
        <locationX>100</locationX>
        <locationY>200</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>The account  {!myVariable_current.Account.Name} has a Private Exchange opportunity {!myVariable_current.Name} </stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>type</name>
            <value>
                <stringValue>GROUP</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <stringValue>0F9330000000UXgCAM</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <assignments>
        <name>myVariable_waitStartTimeAssignment</name>
        <label>myVariable_waitStartTimeAssignment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>myVariable_waitStartTimeVariable</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>myDecision</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>myDecision</name>
        <label>Primary Decision</label>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>default</defaultConnectorLabel>
        <rules>
            <name>myRule_1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>formula_myRule_1</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>myRule_1_A1</targetReference>
            </connector>
            <label>Entry Criteria</label>
        </rules>
    </decisions>
    <description>Chatter post to Private Exchange chatter group when a opportunity is updated or created.</description>
    <formulas>
        <processMetadataValues>
            <name>originalFormula</name>
            <value>
                <stringValue>OR(
AND(ISNEW(),NOT(ISPICKVAL([Opportunity].Exchange_Offering_Type__c ,&apos;No Private Exchange&apos;))),
AND(
NOT(ISNEW()),
OR(ISNULL(PRIORVALUE([Opportunity].Exchange_Offering_Type__c )),PRIORVALUE([Opportunity].Exchange_Offering_Type__c) == &apos;No Private Exchange&apos;),
NOT(ISPICKVAL(([Opportunity].Exchange_Offering_Type__c ),&apos;&apos;)),NOT(ISPICKVAL([Opportunity].Exchange_Offering_Type__c ,&apos;No Private Exchange&apos;))
)
)</stringValue>
            </value>
        </processMetadataValues>
        <name>formula_myRule_1</name>
        <dataType>Boolean</dataType>
        <expression>OR(
AND(ISNEW(),NOT(ISPICKVAL({!myVariable_current.Exchange_Offering_Type__c} ,&apos;No Private Exchange&apos;))),
AND(
NOT(ISNEW()),
OR(ISNULL(PRIORVALUE({!myVariable_current.Exchange_Offering_Type__c} )),PRIORVALUE({!myVariable_current.Exchange_Offering_Type__c}) == &apos;No Private Exchange&apos;),
NOT(ISPICKVAL(({!myVariable_current.Exchange_Offering_Type__c} ),&apos;&apos;)),NOT(ISPICKVAL({!myVariable_current.Exchange_Offering_Type__c} ,&apos;No Private Exchange&apos;))
)
)</expression>
    </formulas>
    <interviewLabel>Notify_Private_Exchange_About_New_Opportunity-1_Opportunity</interviewLabel>
    <label>Notify_Private_Exchange_About_New_Opportunity_v8</label>
    <processMetadataValues>
        <name>ObjectType</name>
        <value>
            <stringValue>Opportunity</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>ObjectVariable</name>
        <value>
            <elementReference>myVariable_current</elementReference>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OldObjectVariable</name>
        <value>
            <elementReference>myVariable_old</elementReference>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>TriggerType</name>
        <value>
            <stringValue>onAllChanges</stringValue>
        </value>
    </processMetadataValues>
    <processType>Workflow</processType>
    <startElementReference>myVariable_waitStartTimeAssignment</startElementReference>
    <variables>
        <name>myVariable_current</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>myVariable_old</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>myVariable_waitStartTimeVariable</name>
        <dataType>DateTime</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Flow.CurrentDateTime</elementReference>
        </value>
    </variables>
</Flow>
